using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Modelx;


namespace JTex.Forms.HR
{
    public partial class DesignationForm : Form
    {
        public DesignationForm()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Modelx.ADOEntityModel dbContext = new Modelx.ADOEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Designations.Load();
            // This line of code is generated by Data Source Configuration Wizard
            designationsBindingSource.DataSource = dbContext.Designations.Local.ToBindingList();
        }

        ADOEntityModel DbContext = new ADOEntityModel();
        Designation dObj = new Designation();

        private void popGrid()
        {
            DbContext = new Modelx.ADOEntityModel();
            DbContext.Designations.Load();
            gridControl1.DataSource = DbContext.Designations.Local;
        }
        private void DesignationForm_Load(object sender, EventArgs e)
        {

        }


        private void bbiPrintPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            gridControl1.ShowRibbonPrintPreview();
        }

        private void bbiNew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            dObj.Name = NameTextEdit.Text.Trim();
            dObj.Abbrevation = AbbrevationTextEdit.Text.Trim();

            using (var myDbEntities = new ADOEntityModel())
            {
                myDbEntities.Designations.Add(dObj);
                myDbEntities.SaveChanges();
            }
            popGrid();
        }

        private void bbiEdit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (DesiginationIDTextEdit.Text != "")
            {
                dObj.DesiginationID = Convert.ToInt32(DesiginationIDTextEdit.Text.Trim());
                dObj.Name = NameTextEdit.Text.Trim();
                dObj.Abbrevation = AbbrevationTextEdit.Text.Trim();

                using (var myDbEntities = new ADOEntityModel())
                {
                    myDbEntities.Entry(dObj).State = EntityState.Modified;
                    myDbEntities.SaveChanges();
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter department id...");
            }
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (DesiginationIDTextEdit.Text != "")
            {
                dObj.DesiginationID = Convert.ToInt32(DesiginationIDTextEdit.Text.Trim());
                using (var myDbEntities = new ADOEntityModel())
                {
                    var entery = myDbEntities.Entry(dObj);
                    if (entery.State == System.Data.Entity.EntityState.Detached)
                    {
                        myDbEntities.Designations.Attach(dObj);
                        myDbEntities.Designations.Remove(dObj);
                        myDbEntities.SaveChanges();
                    }
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter department id...");
            }
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            try
            {
                DesiginationIDTextEdit.Text = gridView1.GetFocusedRowCellValue("DesiginationID").ToString().Trim();
                NameTextEdit.Text = gridView1.GetFocusedRowCellValue("Name").ToString().Trim();
                AbbrevationTextEdit.Text = gridView1.GetFocusedRowCellValue("Abbrevation").ToString().Trim();
            }
            catch(Exception ex)
            {

            }
        }
    }
}
