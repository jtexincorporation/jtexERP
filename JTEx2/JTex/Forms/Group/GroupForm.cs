using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Modelx;

namespace JTex.Forms
{
    public partial class GroupForm : Form
    {
        public GroupForm()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Modelx.ADOEntityModel dbContext = new Modelx.ADOEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Groups.Load();
            // This line of code is generated by Data Source Configuration Wizard
            groupsBindingSource.DataSource = dbContext.Groups.Local.ToBindingList();
        }
        ADOEntityModel DbContext = new ADOEntityModel();
        Group gObj = new Group();
        private bool validation()
        {
            bool isSuccess=false;
            if (GroupIDTextEdit.Text != "")
                if (NameTextEdit.Text != "")
                    if (NumberTextEdit.Text != "")
                        isSuccess = true;
                    else
                        isSuccess = false;
            return isSuccess;
        }
        private void popGrid()
        {
            DbContext = new Modelx.ADOEntityModel();
            DbContext.Groups.Load();
            gridControl1.DataSource = DbContext.Groups.Local;
        }
        private void bbiPrintPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            gridControl1.ShowRibbonPrintPreview();
        }

        private void gridView1_FocusedRowChanged_1(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            try
            {
                GroupIDTextEdit.Text = gridView1.GetFocusedRowCellValue("GroupID").ToString().Trim();
                NameTextEdit.Text = gridView1.GetFocusedRowCellValue("Name").ToString().Trim();
                NumberTextEdit.Text = gridView1.GetFocusedRowCellValue("Number").ToString().Trim();
            }
            catch(Exception ex)
            {

            }
        }

        private void bbiNew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if(validation())
            {
                gObj.GroupID = Convert.ToInt32(GroupIDTextEdit.Text.Trim());
                gObj.Name = NameTextEdit.Text.Trim();
                gObj.Number = Convert.ToInt32(NumberTextEdit.Text.Trim());
                using (var myDbEntities = new ADOEntityModel())
                {
                    myDbEntities.Groups.Add(gObj);
                    myDbEntities.SaveChanges();
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please fill all the fields...");
            }
        }

        private void bbiEdit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (validation())
            {
                gObj.GroupID = Convert.ToInt32(GroupIDTextEdit.Text.Trim());
                gObj.Name = NameTextEdit.Text.Trim();
                gObj.Number = Convert.ToInt32(NumberTextEdit.Text.Trim());
                using (var myDbEntities = new ADOEntityModel())
                {
                    myDbEntities.Entry(gObj).State = System.Data.Entity.EntityState.Modified;
                    myDbEntities.SaveChanges();
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please fill all the fields...");
            }
        }

        private void bbiDelete_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            gObj.GroupID = Convert.ToInt32(GroupIDTextEdit.Text.Trim());
            if (GroupIDTextEdit.Text != "")
            {
                using (var myDbEntities = new ADOEntityModel())
                {
                    var entery = myDbEntities.Entry(gObj);
                    if (entery.State == System.Data.Entity.EntityState.Detached)
                    {
                        myDbEntities.Groups.Attach(gObj);
                        myDbEntities.Groups.Remove(gObj);
                        myDbEntities.SaveChanges();
                    }
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter group id...");
            }
        }
    }
}
