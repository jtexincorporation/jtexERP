using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Modelx;


namespace JTex.Forms
{
    public partial class Branch : Form
    {
        public Branch()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Modelx.ADOEntityModel dbContext = new Modelx.ADOEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Branches.Load();
            // This line of code is generated by Data Source Configuration Wizard
            branchesBindingSource.DataSource = dbContext.Branches.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            dbContext = new Modelx.ADOEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Companies.Load();
            // This line of code is generated by Data Source Configuration Wizard
            companiesBindingSource.DataSource = dbContext.Companies.Local.ToBindingList();
        }

        private void Branch_Load(object sender, EventArgs e)
        {

        }
        ADOEntityModel DbContext = new ADOEntityModel();
        Modelx.Branch bObj = new Modelx.Branch();
        private void popGrid()
        {
            DbContext = new Modelx.ADOEntityModel();
            DbContext.Branches.Load();
            gridControl1.DataSource = DbContext.Branches.Local;
        }


        private void gridView1_FocusedRowChanged_1(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            try
            {
                BranchIDTextEdit.Text = gridView1.GetFocusedRowCellValue("BranchID").ToString().Trim();
                CompanyIDLookUpEdit.Text = gridView1.GetFocusedRowCellValue("CompanyID").ToString().Trim();
                NameTextEdit.Text = gridView1.GetFocusedRowCellValue("Name").ToString().Trim();
                NumberTextEdit.Text = gridView1.GetFocusedRowCellValue("Number").ToString().Trim();
                AddressTextEdit.Text = gridView1.GetFocusedRowCellValue("Address").ToString().Trim();
                PhoneNumberTextEdit.Text = gridView1.GetFocusedRowCellValue("PhoneNumber").ToString().Trim();
                FaxNumberTextEdit.Text = gridView1.GetFocusedRowCellValue("FaxNumber").ToString().Trim();
            }
            catch(Exception ex)
            {

            }
          
        }

        private void bbiNew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            bObj.CompanyID = Convert.ToInt32(CompanyIDLookUpEdit.Text.Trim());
            bObj.Number = Convert.ToInt32(NumberTextEdit.Text.Trim());
            bObj.Name = NameTextEdit.Text.Trim();
            bObj.Address = AddressTextEdit.Text.Trim();
            bObj.PhoneNumber= PhoneNumberTextEdit.Text.Trim();
            bObj.FaxNumber= FaxNumberTextEdit.Text.Trim();

            using (var myDbEntities = new ADOEntityModel())
            {
                myDbEntities.Branches.Add(bObj);
                myDbEntities.SaveChanges();
            }
            popGrid();
        }

        private void bbiEdit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (BranchIDTextEdit.Text != "")
            {
                bObj.BranchID = Convert.ToInt32(BranchIDTextEdit.Text.Trim());
                bObj.CompanyID = Convert.ToInt32(CompanyIDLookUpEdit.Text.Trim());
                bObj.Number = Convert.ToInt32(NumberTextEdit.Text.Trim());
                bObj.Name = NameTextEdit.Text.Trim();
                bObj.Address = AddressTextEdit.Text.Trim();
                bObj.PhoneNumber = PhoneNumberTextEdit.Text.Trim();
                bObj.FaxNumber = FaxNumberTextEdit.Text.Trim();

                using (var myDbEntities = new ADOEntityModel())
                {
                    myDbEntities.Entry(bObj).State = EntityState.Modified;
                    myDbEntities.SaveChanges();
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter branch id...");
            }
        }

        private void bbiDelete_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            bObj.BranchID = Convert.ToInt32(BranchIDTextEdit.Text.Trim());
            if (BranchIDTextEdit.Text != "")
            {
                using (var myDbEntities = new ADOEntityModel())
                {
                    var entery = myDbEntities.Entry(bObj);
                    if (entery.State == System.Data.Entity.EntityState.Detached)
                    {
                        myDbEntities.Branches.Attach(bObj);
                        myDbEntities.Branches.Remove(bObj);
                        myDbEntities.SaveChanges();
                    }
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter group id...");
            }
        }
    }
}
