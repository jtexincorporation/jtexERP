using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraBars;
using IMS;
using System.Data.Entity;

namespace JTex.Forms.Inventory.Yarn
{
    public partial class FormDemand : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        IMSEntityModel iMSEntityModel;
        DemandGenerate demandGenerate = new DemandGenerate();
        public FormDemand()
        {
            InitializeComponent();

            SHOWGRID();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Modelx.ATMSEntityModel dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.PurchaseOrders.Load();
            // This line of code is generated by Data Source Configuration Wizard
            purchaseOrdersBindingSource.DataSource = dbContext.PurchaseOrders.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            IMS.IMSEntityModel dbContextYdefine = new IMS.IMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContextYdefine.YDefines.Load();
            // This line of code is generated by Data Source Configuration Wizard
            yDefinesBindingSource.DataSource = dbContextYdefine.YDefines.Local.ToBindingList();
        }

        private void DemandSave_ItemClick(object sender, ItemClickEventArgs e)
        {
            AddDemand();
            Clear();
            SHOWGRID();
            }

        private void Demand_BagsTextEdit_DoubleClick(object sender, EventArgs e)
        {
            
                int Bags = Convert.ToInt32(Demand_BagsTextEdit.Text);
                double Netwieght = Bags * 44.2;
                Demand_netWeightTextEdit.Text = Netwieght.ToString();

            
        }

        private void ClearDemand_ItemClick(object sender, ItemClickEventArgs e)
        {
            Clear();
        }
        //pClearFieldsmethod
        private void Clear()
        {
            Demand_idTextEdit.Text = "";
            Demand_poTextEdit.EditValue = null;
            Demand_yarnIDTextEdit.EditValue=null;
            Demand_BagsTextEdit.Text = "";
            Demand_netWeightTextEdit.Text = "";
            Demand_GtWeightTextEdit.Text = "";
        }
        //addDemand Method
        private void AddDemand()
        {
            demandGenerate.Demand_po = Demand_poTextEdit.EditValue.ToString();
            demandGenerate.Demand_yarnID = Convert.ToInt32(Demand_yarnIDTextEdit.EditValue.ToString());
            demandGenerate.Demand_Bags = Convert.ToInt32(Demand_BagsTextEdit.Text.Trim());
            demandGenerate.Demand_netWeight = float.Parse(Demand_netWeightTextEdit.Text.Trim(), System.Globalization.CultureInfo.InvariantCulture);
            demandGenerate.Demand_GtWeight = float.Parse(Demand_GtWeightTextEdit.Text.Trim(), System.Globalization.CultureInfo.InvariantCulture);
            using (iMSEntityModel = new IMSEntityModel())
            {
                iMSEntityModel.DemandGenerates.Add(demandGenerate);
                iMSEntityModel.SaveChanges();
            }
            MessageBox.Show("Demand Generated Successfully");

        }
        //ShowGridMEthod
        private void SHOWGRID()
        {
            using (iMSEntityModel = new IMSEntityModel())
            {
                var result=iMSEntityModel.DemandGenerates.ToList();
                gridControl1.DataSource = result;
            }

        }
        //updateDemand metod////////////
        private void UpdateDemand1()

        {
            demandGenerate.Demand_id = Convert.ToInt32(Demand_idTextEdit.Text.Trim());
            demandGenerate.Demand_po = Demand_poTextEdit.EditValue.ToString();
            demandGenerate.Demand_yarnID = Convert.ToInt32(Demand_yarnIDTextEdit.EditValue.ToString());
            demandGenerate.Demand_Bags = Convert.ToInt32(Demand_BagsTextEdit.Text.Trim());
            demandGenerate.Demand_netWeight = float.Parse(Demand_netWeightTextEdit.Text.Trim(), System.Globalization.CultureInfo.InvariantCulture);
            demandGenerate.Demand_GtWeight = float.Parse(Demand_GtWeightTextEdit.Text.Trim(), System.Globalization.CultureInfo.InvariantCulture);
            using (iMSEntityModel = new IMSEntityModel())
            {
                iMSEntityModel.DemandGenerates.Add(demandGenerate);
                iMSEntityModel.Entry(demandGenerate).State = EntityState.Modified;
                iMSEntityModel.SaveChanges();
            }
            MessageBox.Show("Demand Updated Successfully");

        }

        private void DemandExit_ItemClick(object sender, ItemClickEventArgs e)
        {
            this.Close();
        }

        private void gridView1_DoubleClick(object sender, EventArgs e)
        {
            Demand_idTextEdit.Text = gridView1.GetFocusedRowCellValue("Demand_id").ToString();
            Demand_BagsTextEdit.Text = gridView1.GetFocusedRowCellValue("Demand_Bags").ToString();
            Demand_GtWeightTextEdit.Text = gridView1.GetFocusedRowCellValue("Demand_GtWeight").ToString();
            Demand_netWeightTextEdit.Text = gridView1.GetFocusedRowCellValue("Demand_netWeight").ToString();

        }

        private void UpdateDemand_ItemClick(object sender, ItemClickEventArgs e)
        {
            UpdateDemand1();
            Clear();
            SHOWGRID();
        }
    }
}