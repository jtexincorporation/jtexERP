using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraBars;
using System.Data.Entity;
using IMS;

namespace JTex.Forms.Inventory.Yarn
{
    public partial class FormYarnStore : DevExpress.XtraBars.Ribbon.RibbonForm
    {

        YarnStock yarnStock = new YarnStock();
        IMSEntityModel iMSEntityModel;
        public FormYarnStore()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            //// Instantiate a new DBContext
            //IMS.IMSEntityModel dbContext = new IMS.IMSEntityModel();
            //// Call the Load method to get the data for the given DbSet from the database.
            //dbContext.YarnStocks.Load();
            //// This line of code is generated by Data Source Configuration Wizard
            //yarnStocksBindingSource.DataSource = dbContext.YarnStocks.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Modelx.ADOEntityModel dbContext = new Modelx.ADOEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Suppliers.Load();
            // This line of code is generated by Data Source Configuration Wizard
            suppliersBindingSource.DataSource = dbContext.Suppliers.Local.ToBindingList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            Modelx.ATMSEntityModel dbContextPO = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContextPO.PurchaseOrders.Load();
            // This line of code is generated by Data Source Configuration Wizard
            purchaseOrdersBindingSource.DataSource = dbContextPO.PurchaseOrders.Local.ToBindingList();

            IMS.IMSEntityModel db = new IMS.IMSEntityModel();
            db.YDefines.Load();

            yDefineBindingSource.DataSource = db.YDefines.Local.ToBindingList();
        }

        private void FormYarnStore_Load(object sender, EventArgs e)
        {

        }

        private void SaveYarnStore_ItemClick(object sender, ItemClickEventArgs e)
        {
            AddYarnStock();
           
        }
        //Add Method to databas
        private void AddYarnStock()
        {
                int RowCount = gridView1.RowCount;

                for (int i = 0; i < RowCount; i++)
                {
                    yarnStock.Yarn_Po = Yarn_PoLookUpEdit.EditValue.ToString();
                    yarnStock.PartyID = Convert.ToInt32(PartyIDLookUpEdit.EditValue.ToString());
                    yarnStock.Amount = Convert.ToInt32(AmountTextEdit.Text.Trim());
                    yarnStock.yarnGatepass = Convert.ToInt32(yarnGatepassTextEdit.Text.Trim());
                    yarnStock.Date = Convert.ToDateTime(DateDateEdit.Text.Trim());
                    yarnStock.Category = CategoryComboBoxEdit.Text.Trim();
                    yarnStock.DriverName = DriverNameTextEdit.Text.Trim();
                    yarnStock.VehicleNumber = VehicleNumberTextEdit.Text.Trim();
                    yarnStock.Department = "Yarn";
                    yarnStock.AccountID = 121;
                    if (CategoryComboBoxEdit.Text.Equals("ISSUE"))
                    {
                        yarnStock.GP_Category = "Outward";
                    }
                    else if (CategoryComboBoxEdit.Text.Equals("Claim"))
                    {
                        yarnStock.GP_Category = "Outward";
                    }
                    else
                    {
                        yarnStock.GP_Category = "Inward";
                    }
                    yarnStock.YarnID = Convert.ToInt32(gridView1.GetRowCellValue(i, "YarnID").ToString());
                    yarnStock.YarnsBags = Convert.ToInt32(gridView1.GetRowCellValue(i, "YarnsBags").ToString());
                    yarnStock.YarnNetweighy = float.Parse(gridView1.GetRowCellValue(i, "YarnNetweighy").ToString());
                    yarnStock.Description = gridView1.GetRowCellValue(i, "Description").ToString();



                    using (iMSEntityModel = new IMSEntityModel())
                    {
                        iMSEntityModel.YarnStocks.Add(yarnStock);
                        iMSEntityModel.SaveChanges();
                    }

                }

                MessageBox.Show("Recored Added Successfully");
            
        }
        //Clear Fields Method
        private void ClearFields()
        {
            StoreIDTextEdit.Text = "";
            Yarn_PoLookUpEdit.EditValue = null;
            PartyIDLookUpEdit.EditValue= null;
            AmountTextEdit.Text = "";
            yarnGatepassTextEdit.Text = "";
            DateDateEdit.Text = "";
            CategoryComboBoxEdit.Text = "";
            DriverNameTextEdit.Text = "";
            yarnStock.VehicleNumber = VehicleNumberTextEdit.Text.Trim();
        }
    }
}