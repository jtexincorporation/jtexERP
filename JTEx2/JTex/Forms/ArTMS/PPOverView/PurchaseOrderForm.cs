using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Modelx;
using DevExpress.XtraGrid.Views.Grid;
using System.Data.SqlClient;

namespace JTex.Forms.ArTMS
{
    public partial class PurchaseOrderForm : Form
    {
        public PurchaseOrderForm()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext

            Modelx.ATMSEntityModel dbContext;

            dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Clients.Load();
            // This line of code is generated by Data Source Configuration Wizard
            clientsBindingSource.DataSource = dbContext.Clients.Local.ToBindingList();



            dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Seasons.Load();
            // This line of code is generated by Data Source Configuration Wizard
            seasonBindingSource.DataSource = dbContext.Seasons.Local.ToBindingList();

            dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.StatusCategories.Load();
            // This line of code is generated by Data Source Configuration Wizard
            statusCategoryBindingSource.DataSource = dbContext.StatusCategories.Local.ToBindingList();


            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
           


        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Close();
        }

        private void bbiPrintPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SearchPO(PPOverViewAll.PoID);
            gridView1.SelectAll();
            Int32[] selectedRowHandles = gridView1.GetSelectedRows();
            for (int i = 0; i < selectedRowHandles.Length; i++)
            {
                Search(Convert.ToInt32(gridView1.GetRowCellValue(selectedRowHandles[i], "articleid").ToString().Trim()));
                gridView1.MoveNext();
            }

        }
        ATMSEntityModel DbContext;
        POid pObj = new POid();
        PurchaseOrder poObj = new PurchaseOrder();

        private void RefreshClientBtn_Click(object sender, EventArgs e)
        {
            Modelx.ATMSEntityModel dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Clients.Load();
            // This line of code is generated by Data Source Configuration Wizard
            clientsBindingSource.DataSource = dbContext.Clients.Local.ToBindingList();

        }
        PPOverViewAll pf = new PPOverViewAll();
        ClientForm clf;
        private void simpleButton1_Click(object sender, EventArgs e)
        {
            if (clf == null)
            {

                clf = new ClientForm();
                clf.Show();
                clf.BringToFront();
                clf.FormClosed += Clf_FormClosed;
            }
            else if (clf != null)
            {
                clf.BringToFront();
            }
            else
            {
                clf.Activate();
            }

        }

        private void Clf_FormClosed(object sender, FormClosedEventArgs e)
        {
            clf = null;
        }
        public void SearchPO(Decimal PONumber)
        {
            if(PONumber==0)
            {
                MessageBox.Show("Please enter PO id...");
            }
            else
            {      
                try
                {
                    using (var DbContext = new Modelx.ATMSEntityModel())
                    {
                        var POO = DbContext.PurchaseOrders.Where(x => x.doc == PONumber).FirstOrDefault();
                        idTextEdit.Text = PONumber.ToString().Trim();
                        dateDateEdit.Text = POO.date.ToString().Trim();
                        poTextEdit.Text = POO.po.ToString().Trim();
                        clientLookUpEdit.Text = POO.client.ToString().Trim();
                        packingTextEdit.Text = POO.packing.ToString().Trim();
                        ticketingTextEdit.Text = POO.ticketing.ToString().Trim();
                        paymenttermTextEdit.Text = POO.paymentterm.ToString().Trim();
                        polybagTextEdit.Text = POO.polybag.ToString().Trim();
                        var PO = DbContext.PurchaseOrders.SqlQuery("SELECT * FROM PurchaseOrders WHERE doc='" + PONumber + "'").ToList();
                        gridControl1.DataSource = PO;
                    }
                }
                catch(Exception ex)
                {
                    MessageBox.Show("Record not exist...");
                }
                finally
                {
                    int n = gridView1.RowCount;
                }
                
            }
            
        }
        private void PurchaseOrderForm_Load(object sender, EventArgs e)
        {
            idTextEdit.Text = GetMaxOne().ToString().Trim();
        }
        private void Search(int ArticleID)
        {
         ATMSEntityModel DbContext = new ATMSEntityModel();
            try
            {

                var Article = DbContext.Articles.Find(ArticleID);
                gridView1.SetFocusedRowCellValue("packing", Article.Name);
                gridView1.SetFocusedRowCellValue("polybag", Article.Weight);
                gridView1.SetFocusedRowCellValue("paymentterm",Article.Comp);
                gridView1.SetFocusedRowCellValue("price", Article.Price);
                gridView1.SetFocusedRowCellValue("priceby", Article.PriceBy);

            }
            catch (Exception ex)
            {
                MessageBox.Show("Please enter valid id...");
            }
        }
        private Int64 GetMaxOne()
        {
            DbContext = new ATMSEntityModel();
            Int64 ArticlID = DbContext.POids.Max(po => po.docid);
            ArticlID++;
            return ArticlID;
        }
        private bool SavePoid(Decimal PoID)
        {
            bool succuess= false;
            pObj.docid = Convert.ToInt64(PoID);
            pObj.userid = 1;
            using (var DbContext = new ATMSEntityModel())
            {
                DbContext.POids.Add(pObj);
                DbContext.SaveChanges();
                succuess = true;
            }
            return succuess;
        }
        private void SavePO()
        {
            int RowCount = gridView1.RowCount;
            for (int i = 0; i < RowCount; i++)
            {
                poObj.doc = Convert.ToDecimal(idTextEdit.Text.Trim());

                poObj.id = i;
                poObj.client = Convert.ToInt32(clientLookUpEdit.EditValue.ToString());
                poObj.date = dateDateEdit.DateTime;
                poObj.po = poTextEdit.Text.Trim();
                poObj.packing = packingTextEdit.Text.Trim();
                poObj.ticketing = ticketingTextEdit.Text.Trim();
                poObj.paymentterm = paymenttermTextEdit.Text.Trim();
                poObj.polybag = polybagTextEdit.Text.Trim();

                
                poObj.articleid = Convert.ToInt32(gridView1.GetRowCellValue(i, "articleid").ToString().Trim());
                //MessageBox.Show("Article ID"+ gridView1.GetRowCellValue(i, "articleid").ToString().Trim());
                poObj.qty = Convert.ToInt32(gridView1.GetRowCellValue(i, "qty").ToString().Trim());
                //MessageBox.Show("Qty"+ gridView1.GetRowCellValue(i, "qty").ToString().Trim());
                poObj.price = Convert.ToDouble(gridView1.GetRowCellValue(i, "price").ToString().Trim());
                //MessageBox.Show("Price"+ gridView1.GetRowCellValue(i, "price").ToString().Trim());
                poObj.priceby = gridView1.GetRowCellValue(i, "priceby").ToString().Trim();
                //MessageBox.Show("price by"+ gridView1.GetRowCellValue(i, "priceby").ToString().Trim());

                poObj.delivery = Convert.ToDateTime(gridView1.GetRowCellValue(i, "delivery"));
                //MessageBox.Show("delivery"+ gridView1.GetRowCellValue(i, "delivery"));
                poObj.season = Convert.ToByte(gridView1.GetRowCellValue(i, "season").ToString().Trim());
                //MessageBox.Show("season"+ gridView1.GetRowCellValue(i, "season").ToString().Trim());
                poObj.remarks = gridView1.GetRowCellValue(i, "remarks").ToString().Trim();
                poObj.status = 1;

                using (var myDbEntities = new ATMSEntityModel())
                {
                    myDbEntities.PurchaseOrders.Add(poObj);
                    myDbEntities.SaveChanges();
                }
            }
        }
  
        private void CLear()
        {
            //idTextEdit.Text = "";
            poTextEdit.Text = "";
            packingTextEdit.Text = "";
            ticketingTextEdit.Text = "";
            paymenttermTextEdit.Text = "";
            polybagTextEdit.Text = "";

            gridView1.SelectAll();
            gridView1.DeleteSelectedRows();
            gridControl1.DataSource = purchaseOrdersBindingSource;

        }
        private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
                if (SavePoid(Convert.ToDecimal(idTextEdit.Text.Trim())))
                {
                    SavePO();
                    MessageBox.Show("Inserted successfuly...");
                    gridControl1.DataSource = null;
                    gridControl1.DataSource = purchaseOrdersBindingSource;
                    CLear();
                    idTextEdit.Text = GetMaxOne().ToString().Trim();
                }
        }

        private void idTextEdit_KeyDown(object sender, KeyEventArgs e)
        {
            if(e.KeyCode==Keys.Enter)
            {            
                SearchPO(Convert.ToDecimal(idTextEdit.Text.Trim()));
                gridView1.SelectAll();
                Int32[] selectedRowHandles = gridView1.GetSelectedRows();
                for (int i = 0; i < selectedRowHandles.Length; i++)
                {
                    Search(Convert.ToInt32(gridView1.GetRowCellValue(selectedRowHandles[i], "articleid").ToString().Trim()));
                    gridView1.MoveNext();
                }
            }
          
        }

        private void barButtonItem4_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            packingTextEdit.Text = "";
            ticketingTextEdit.Text = "";
            paymenttermTextEdit.Text = "";
            polybagTextEdit.Text = "";
            clientLookUpEdit.Text = "";
            poTextEdit.Text = "";
            gridControl1.DataSource = null;

            gridView1.SelectAll();
            gridView1.DeleteSelectedRows();
            gridControl1.DataSource = purchaseOrdersBindingSource;

        }
        private void SearchQuantity(int ArticleID)
        {
            using (var DbContext = new ATMSEntityModel())
            {
                var quantity = DbContext.ArticleBarcodes
                    .Where(s => s.articleid == ArticleID).ToList(); 
                int n =Convert.ToInt32(quantity.Sum(x => x.qty));
                gridView1.SetFocusedRowCellValue("qty", n);
            }     
        }
      
        private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            gridView1.SelectAll();
            Int32[] selectedRowHandles = gridView1.GetSelectedRows();
            for (int i = 0; i < selectedRowHandles.Length; i++)
            {
                Search(Convert.ToInt32(gridView1.GetRowCellValue(selectedRowHandles[i], "articleid").ToString().Trim()));
                gridView1.MoveNext();
            }

        }


        private void gridView1_KeyDown_2(object sender, KeyEventArgs e)
        {
            if(e.KeyCode==Keys.Tab && gridView1.FocusedColumn.FieldName=="packing")
            {
                try
                {
                    Search(Convert.ToInt32(gridView1.GetFocusedRowCellValue("articleid").ToString()));
                    SearchQuantity(Convert.ToInt32(gridView1.GetFocusedRowCellValue("articleid").ToString()));
                }
                catch(Exception ex)
                {
                    MessageBox.Show(""+ex);
                    MessageBox.Show("Please select Style#...");
                }
                
            }
        }

        private void CreateNewIDBtn_Click(object sender, EventArgs e)
        {
            idTextEdit.Text = GetMaxOne().ToString().Trim();
        }

        private void bbiEdit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }
    }
}
