using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Modelx;

namespace JTex.Forms.ArTMS
{
    public partial class ClientForm : Form
    {
        public ClientForm()
        {
            InitializeComponent();
            Modelx.ATMSEntityModel dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Clients.Load();
            // This line of code is generated by Data Source Configuration Wizard
            clientsBindingSource.DataSource = dbContext.Clients.Local.ToBindingList();
        }

        private void ClientForm_Load(object sender, EventArgs e)
        {
            popGrid();
        }

        ATMSEntityModel atmObj = new ATMSEntityModel();
        Modelx.Client cObj = new Modelx.Client();


        private void popGrid()
        {
            using (var myModel = new Modelx.ATMSEntityModel())
            {
                myModel.Clients.Load();
                gridControl1.DataSource = myModel.Clients.ToList();
            }
        }


        private void bbiPrintPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            gridControl1.ShowRibbonPrintPreview();
        }

        private void bbiNew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                int l4_id = Convert.ToInt32(L4_idTextEdit.Text.Trim());
                string Name = nameTextEdit.Text.Trim();
                string Address = addressTextEdit.Text.Trim();
                string Contact = contactTextEdit.Text.Trim();
                string Email = emailTextEdit.Text.Trim();
                string Web = webTextEdit.Text.Trim();
                bool isActive = bool.Parse(isActiveCheckEdit.EditValue.ToString());

                using (var myDbEntities = new Modelx.ATMSEntityModel())
                {
                    myDbEntities.Clients.Load();
                    var ninjas = myDbEntities.Database.ExecuteSqlCommand("EXEC spSaveClient {0},{1},{2},{3},{4},{5},{6}", l4_id, Name, Address, Contact, Email, Web, isActive);
                    if (ninjas > 0)
                    {
                        MessageBox.Show("Inserted successfuly....");
                    }
                    else
                    {
                        MessageBox.Show("Failed to insert....");
                    }
                }
                popGrid();
            }
            catch (Exception ex)
            {
                MessageBox.Show("" + ex);
            }
        }

        private void bbiEdit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                int ClientID = Convert.ToInt32(clientidTextEdit.Text.Trim());
                string Name = nameTextEdit.Text.Trim();
                string Address = addressTextEdit.Text.Trim();
                string Contact = contactTextEdit.Text.Trim();
                string Email = emailTextEdit.Text.Trim();
                string Web = webTextEdit.Text.Trim();
                bool isActive = bool.Parse(isActiveCheckEdit.EditValue.ToString());

                using (var myDbEntities = new Modelx.ATMSEntityModel())
                {
                    var ninjas = myDbEntities.Database.ExecuteSqlCommand("EXEC spUpdateClient {0},{1},{2},{3},{4},{5},{6}", ClientID, Name, Address, Contact, Email, Web, isActive);
                    if (ninjas > 0)
                    {
                        MessageBox.Show("Updated successfuly....");
                    }
                    else
                    {
                        MessageBox.Show("Failed to update....");
                    }
                }
                popGrid();
            }
            catch (Exception ex)
            {
                MessageBox.Show("" + ex);
            }
        }

        private void bbiDelete_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            cObj.clientid = Convert.ToInt32(clientidTextEdit.Text.Trim());
            if (clientidTextEdit.Text != "")
            {
                using (var myDbEntities = new ATMSEntityModel())
                {
                    var entery = myDbEntities.Entry(cObj);
                    if (entery.State == System.Data.Entity.EntityState.Detached)
                    {
                        myDbEntities.Clients.Attach(cObj);
                        myDbEntities.Clients.Remove(cObj);
                        myDbEntities.SaveChanges();
                    }
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter c;lient id...");
            }
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            try
            {
                clientidTextEdit.Text = gridView1.GetFocusedRowCellValue("clientid").ToString().Trim();
                L4_idTextEdit.Text = gridView1.GetFocusedRowCellValue("L4_id").ToString().Trim();
                nameTextEdit.Text = gridView1.GetFocusedRowCellValue("name").ToString().Trim();
                addressTextEdit.Text = gridView1.GetFocusedRowCellValue("address").ToString().Trim();
                contactTextEdit.Text = gridView1.GetFocusedRowCellValue("contact").ToString().Trim();
                emailTextEdit.Text = gridView1.GetFocusedRowCellValue("email").ToString().Trim();
                webTextEdit.Text = gridView1.GetFocusedRowCellValue("web").ToString().Trim();
                isActiveCheckEdit.Checked = Convert.ToBoolean(gridView1.GetFocusedRowCellValue("isActive"));

            }
            catch (Exception ex)
            {
                MessageBox.Show("" + ex);
            }
        }
    }
}
