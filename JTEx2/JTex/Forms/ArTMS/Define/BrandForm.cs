using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Modelx;

namespace JTex.Forms.ArTMS
{
    public partial class BrandForm : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        public BrandForm()
        {
            InitializeComponent();
            Modelx.ATMSEntityModel dbContext = new Modelx.ATMSEntityModel();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Brands.Load();
            // This line of code is generated by Data Source Configuration Wizard
            brandsBindingSource.DataSource = dbContext.Brands.Local.ToBindingList();
        }
        DataTable dt = new DataTable();
        ATMSEntityModel atmObj = new ATMSEntityModel();
        Modelx.Brand bObj = new Modelx.Brand();
        private void popGrid()
        {
                atmObj = new ATMSEntityModel();
                atmObj.Brands.Load();
                gridControl1.DataSource = atmObj.Brands.Local;
        }
        private void bbiNew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            bObj.BrandID= Convert.ToByte(BrandIDTextEdit.Text.Trim());
            bObj.Name = NameTextEdit.Text.Trim();
            bObj.Description = DescriptionTextEdit.Text.Trim();
            bObj.isActive = bool.Parse(isActiveCheckEdit.EditValue.ToString());

            using (var myDbEntities = new ATMSEntityModel())
            {     
                myDbEntities.Brands.Add(bObj);
                myDbEntities.SaveChanges();
            }
            popGrid();
        }

        private void bbiEdit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            bObj.BrandID = Convert.ToByte(BrandIDTextEdit.Text.Trim());
            bObj.Name = NameTextEdit.Text.Trim();
            bObj.Description = DescriptionTextEdit.Text.Trim();
            bObj.isActive = bool.Parse(isActiveCheckEdit.EditValue.ToString());
            {
                using (var myDbEntities = new ATMSEntityModel())
                {
                    myDbEntities.Entry(bObj).State = System.Data.Entity.EntityState.Modified;
                    myDbEntities.SaveChanges();
                }
                popGrid();
            }
        }

        private void bbiDelete_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            bObj.BrandID = Convert.ToByte(BrandIDTextEdit.Text.Trim());
            if (BrandIDTextEdit.Text != "")
            {
                using (var myDbEntities = new ATMSEntityModel())
                {
                    var entery = myDbEntities.Entry(bObj);
                    if (entery.State == System.Data.Entity.EntityState.Detached)
                    {
                        myDbEntities.Brands.Attach(bObj);
                        myDbEntities.Brands.Remove(bObj);
                        myDbEntities.SaveChanges();
                    }
                }
                popGrid();
            }
            else
            {
                MessageBox.Show("Please enter Level 1 code...");
            }
        }

        private void bbiPrintPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            gridControl1.ShowRibbonPrintPreview();
        }

        private void BrandForm_Load(object sender, EventArgs e)
        {
            this.FormBorderStyle = FormBorderStyle.None;
            //popGrid();
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            BrandIDTextEdit.Text = gridView1.GetFocusedRowCellValue("BrandID").ToString().Trim();
            NameTextEdit.Text = gridView1.GetFocusedRowCellValue("Name").ToString().Trim();
            DescriptionTextEdit.Text = gridView1.GetFocusedRowCellValue("Description").ToString().Trim();
            isActiveCheckEdit.Checked = Convert.ToBoolean(gridView1.GetFocusedRowCellValue("isActive"));
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Close();
        }
    }
}
